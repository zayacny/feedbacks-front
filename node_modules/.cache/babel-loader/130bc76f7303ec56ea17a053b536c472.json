{"remainingRequest":"/home/developer/BootstrapVue/Feedbacks/feedbacks-frontend/node_modules/babel-loader/lib/index.js!/home/developer/BootstrapVue/Feedbacks/feedbacks-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/developer/BootstrapVue/Feedbacks/feedbacks-frontend/src/store/index.js","dependencies":[{"path":"/home/developer/BootstrapVue/Feedbacks/feedbacks-frontend/src/store/index.js","mtime":1608640917289},{"path":"/home/developer/BootstrapVue/Feedbacks/feedbacks-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1605783424914},{"path":"/home/developer/BootstrapVue/Feedbacks/feedbacks-frontend/node_modules/babel-loader/lib/index.js","mtime":1605783424534},{"path":"/home/developer/BootstrapVue/Feedbacks/feedbacks-frontend/node_modules/eslint-loader/index.js","mtime":1605783425198}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/developer/BootstrapVue/Feedbacks/feedbacks-frontend/src/store/index.js"],"names":["Vue","Vuex","BootstrapVue","IconsPlugin","axios","use","Store","state","rowsFeedbacks","mutations","setFeedbacks","data","console","log","actions","getFeedbacks","commit","get","writeFeedback","feedback","post","savePhoto","fileImg","formData","FormData","append","headers","saveUser","name","userName","saveCompany","orgName","address","getters","getCountFeedbacks","length","updFeedbacks"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport {\n  BootstrapVue,\n  IconsPlugin\n} from 'bootstrap-vue'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\nimport axios from 'axios'\n\nVue.use(BootstrapVue)\nVue.use(IconsPlugin)\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    rowsFeedbacks: []\n  },\n\n  mutations: {\n    setFeedbacks (state, data) {\n      state.rowsFeedbacks = data\n      console.log('mutation setFeedbacls commit!  ')\n    }\n    // addCompanyData (state, data) {\n    //   state.rowsFeedbacks.map(function (item) {\n    //     for (let i = 0; i < data.length; i++) {\n    //       const element = data[i]\n    //       if (element.id === item.id_company) {\n    //         item.orgName = element.name\n    //         item.address = element.address\n    //       }\n    //     }\n    //   })\n    //   state.rowsFeedbacks.push(state.rowsFeedbacks[4])\n    //   console.log('mutation addCompany commit')\n    //   console.table(state.rowsFeedbacks)\n    // }\n  },\n\n  actions: {\n    // getFeedbacks GET\n    async getFeedbacks ({ commit }) {\n      const { data } = await axios.get('http://localhost:3000/allfeedbacks')\n      commit('setFeedbacks', data)\n    },\n    // GET name and address of company\n    // async getCompany ({ commit }) {\n    //   const { data } = await axios.get('http://localhost:3000/companies')\n    //   commit('addCompanyData', data)\n    // },\n    // write feedback POST\n    async writeFeedback (state, feedback) {\n      const {\n        data\n      } = await axios.post('http://localhost:3000/feedbacks', {\n        feedback\n      })\n      console.log('additionFeedback() done : ', feedback)\n      return data\n    },\n    // save photo POST\n    async savePhoto (state, fileImg) {\n      var formData = new FormData()\n      formData.append('fileImg', fileImg)\n      const {\n        data\n      } = await axios.post('http://localhost:3000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      })\n      return data\n    },\n    // save User  POST\n    async saveUser (state, feedback) {\n      const {\n        data\n      } = await axios.post('http://localhost:3000/users', {\n        name: feedback.userName\n      })\n      return data\n    },\n    // save Company POST\n    async saveCompany (state, feedback) {\n      const {\n        data\n      } = await axios.post('http://localhost:3000/company', {\n        name: feedback.orgName,\n        address: feedback.address\n      })\n      return data\n    }\n  },\n  getters: {\n    getCountFeedbacks (state) {\n      return state.rowsFeedbacks.length\n    },\n    updFeedbacks(state) {\n      return state.rowsFeedbacks\n    }\n  }\n})\n"]}]}