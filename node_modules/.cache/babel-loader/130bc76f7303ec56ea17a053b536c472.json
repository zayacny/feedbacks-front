{"remainingRequest":"/home/developer/BootstrapVue/Feedbacks/feedbacks-frontend/node_modules/babel-loader/lib/index.js!/home/developer/BootstrapVue/Feedbacks/feedbacks-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/developer/BootstrapVue/Feedbacks/feedbacks-frontend/src/store/index.js","dependencies":[{"path":"/home/developer/BootstrapVue/Feedbacks/feedbacks-frontend/src/store/index.js","mtime":1608208784822},{"path":"/home/developer/BootstrapVue/Feedbacks/feedbacks-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1605783424914},{"path":"/home/developer/BootstrapVue/Feedbacks/feedbacks-frontend/node_modules/babel-loader/lib/index.js","mtime":1605783424534},{"path":"/home/developer/BootstrapVue/Feedbacks/feedbacks-frontend/node_modules/eslint-loader/index.js","mtime":1605783425198}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvZGV2ZWxvcGVyL0Jvb3RzdHJhcFZ1ZS9GZWVkYmFja3MvZmVlZGJhY2tzLWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKaW1wb3J0IHsgQm9vdHN0cmFwVnVlLCBJY29uc1BsdWdpbiB9IGZyb20gJ2Jvb3RzdHJhcC12dWUnOwppbXBvcnQgJ2Jvb3RzdHJhcC9kaXN0L2Nzcy9ib290c3RyYXAuY3NzJzsKaW1wb3J0ICdib290c3RyYXAtdnVlL2Rpc3QvYm9vdHN0cmFwLXZ1ZS5jc3MnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpWdWUudXNlKEJvb3RzdHJhcFZ1ZSk7ClZ1ZS51c2UoSWNvbnNQbHVnaW4pOwpWdWUudXNlKFZ1ZXgpOwpleHBvcnQgZGVmYXVsdCBuZXcgVnVleC5TdG9yZSh7CiAgc3RhdGU6IHsKICAgIHJvd3NGZWVkYmFja3M6IFtdCiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldEZlZWRiYWNrczogZnVuY3Rpb24gc2V0RmVlZGJhY2tzKHN0YXRlLCBkYXRhKSB7CiAgICAgIHN0YXRlLnJvd3NGZWVkYmFja3MgPSBkYXRhOwogICAgICBjb25zb2xlLmxvZygnc2V0RmVlZGJhY2tzIHRvIHJvd3NGZWVkYmFja3NbXSAgIHsvbXV0YXRpb25zL1NUT1JFfSBkb25lICAnLCB0aGlzLnN0YXRlLnJvd3NGZWVkYmFja3MpOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgLy8gZ2V0RmVlZGJhY2tzIEdFVAogICAgZ2V0RmVlZGJhY2tzOiBmdW5jdGlvbiBnZXRGZWVkYmFja3MoX3JlZikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21taXQsIF95aWVsZCRheGlvcyRnZXQsIGRhdGE7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjMwMDAvYWxsZmVlZGJhY2tzJyk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF95aWVsZCRheGlvcyRnZXQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgZGF0YSA9IF95aWVsZCRheGlvcyRnZXQuZGF0YTsKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0RmVlZGJhY2tzJywgZGF0YSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyB3cml0ZSBmZWVkYmFjayBQT1NUCiAgICB3cml0ZUZlZWRiYWNrOiBmdW5jdGlvbiB3cml0ZUZlZWRiYWNrKHN0YXRlLCBmZWVkYmFjaykgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgX3lpZWxkJGF4aW9zJHBvc3QsIGRhdGE7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdCgnaHR0cDovL2xvY2FsaG9zdDozMDAwL2ZlZWRiYWNrcycsIHsKICAgICAgICAgICAgICAgICAgZmVlZGJhY2s6IGZlZWRiYWNrCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgX3lpZWxkJGF4aW9zJHBvc3QgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkYXhpb3MkcG9zdC5kYXRhOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2FkZGl0aW9uRmVlZGJhY2soKSBkb25lIDogJywgZmVlZGJhY2spOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIGRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyBzYXZlIHBob3RvIFBPU1QKICAgIHNhdmVQaG90bzogZnVuY3Rpb24gc2F2ZVBob3RvKHN0YXRlLCBmaWxlSW1nKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBmb3JtRGF0YSwgX3lpZWxkJGF4aW9zJHBvc3QyLCBkYXRhOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnZmlsZUltZycsIGZpbGVJbWcpOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC91cGxvYWQnLCBmb3JtRGF0YSwgewogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgX3lpZWxkJGF4aW9zJHBvc3QyID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgICBkYXRhID0gX3lpZWxkJGF4aW9zJHBvc3QyLmRhdGE7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgZGF0YSk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vIHNhdmUgVXNlciAgUE9TVAogICAgc2F2ZVVzZXI6IGZ1bmN0aW9uIHNhdmVVc2VyKHN0YXRlLCBmZWVkYmFjaykgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICB2YXIgX3lpZWxkJGF4aW9zJHBvc3QzLCBkYXRhOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC91c2VycycsIHsKICAgICAgICAgICAgICAgICAgbmFtZTogZmVlZGJhY2sudXNlck5hbWUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfeWllbGQkYXhpb3MkcG9zdDMgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkYXhpb3MkcG9zdDMuZGF0YTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCBkYXRhKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8gc2F2ZSBDb21wYW55IFBPU1QKICAgIHNhdmVDb21wYW55OiBmdW5jdGlvbiBzYXZlQ29tcGFueShzdGF0ZSwgZmVlZGJhY2spIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUoKSB7CiAgICAgICAgdmFyIF95aWVsZCRheGlvcyRwb3N0NCwgZGF0YTsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KCdodHRwOi8vbG9jYWxob3N0OjMwMDAvY29tcGFueScsIHsKICAgICAgICAgICAgICAgICAgbmFtZTogZmVlZGJhY2sub3JnTmFtZSwKICAgICAgICAgICAgICAgICAgYWRkcmVzczogZmVlZGJhY2suYWRkcmVzcwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIF95aWVsZCRheGlvcyRwb3N0NCA9IF9jb250ZXh0NS5zZW50OwogICAgICAgICAgICAgICAgZGF0YSA9IF95aWVsZCRheGlvcyRwb3N0NC5kYXRhOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIsIGRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTUpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIGdldHRlcnM6IHsKICAgIGdldENvdW50RmVlZGJhY2tzOiBmdW5jdGlvbiBnZXRDb3VudEZlZWRiYWNrcyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUucm93c0ZlZWRiYWNrcy5sZW5ndGg7CiAgICB9CiAgfQp9KTs="},{"version":3,"sources":["/home/developer/BootstrapVue/Feedbacks/feedbacks-frontend/src/store/index.js"],"names":["Vue","Vuex","BootstrapVue","IconsPlugin","axios","use","Store","state","rowsFeedbacks","mutations","setFeedbacks","data","console","log","actions","getFeedbacks","commit","get","writeFeedback","feedback","post","savePhoto","fileImg","formData","FormData","append","headers","saveUser","name","userName","saveCompany","orgName","address","getters","getCountFeedbacks","length"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport { BootstrapVue, IconsPlugin } from 'bootstrap-vue'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\nimport axios from 'axios'\n\nVue.use(BootstrapVue)\nVue.use(IconsPlugin)\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    rowsFeedbacks: []\n  },\n\n  mutations: {\n    setFeedbacks (state, data) {\n      state.rowsFeedbacks = data\n      console.log('setFeedbacks to rowsFeedbacks[]   {/mutations/STORE} done  ', this.state.rowsFeedbacks)\n    }\n  },\n\n  actions: {\n    // getFeedbacks GET\n    async getFeedbacks ({ commit }) {\n      const { data } = await axios.get('http://localhost:3000/allfeedbacks')\n      commit('setFeedbacks', data)\n    },\n    // write feedback POST\n    async writeFeedback (state, feedback) {\n      const { data } = await axios.post('http://localhost:3000/feedbacks', { feedback })\n      console.log('additionFeedback() done : ', feedback)\n      return data\n    },\n    // save photo POST\n    async savePhoto (state, fileImg) {\n      var formData = new FormData()\n      formData.append('fileImg', fileImg)\n      const { data } = await axios.post('http://localhost:3000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      })\n      return data\n    },\n    // save User  POST\n    async saveUser (state, feedback) {\n      const { data } = await axios.post('http://localhost:3000/users', { name: feedback.userName })\n      return data\n    },\n    // save Company POST\n    async saveCompany (state, feedback) {\n      const { data } = await axios.post('http://localhost:3000/company', { name: feedback.orgName, address: feedback.address })\n      return data\n    }\n  },\n  getters: {\n    getCountFeedbacks (state) {\n      return state.rowsFeedbacks.length\n    }\n  }\n})\n"]}]}